#! /bin/sh
### BEGIN INIT INFO
# Provides: ts3server
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start daemon at boot time
# Description: Enable service provided by daemon.
### END INIT INFO
# Copyright (c) 2010 TeamSpeak Systems GmbH
# All rights reserved

COMMANDLINE_PARAMETERS="${2}" #add any command line parameters you want to pass here
BINARYPATH=/usr/bin/mh/ts3server
cd "${BINARYPATH}"
LIBRARYPATH="$(pwd)"
BINARYNAME="ts3server_linux_amd64"
PIDFILE="${BINARYPATH}"/ts3server.pid

case "$1" in
	start)
		if [ -e "${PIDFILE}" ]; then
			if ( kill -0 $(cat "${PIDFILE}") 2> /dev/null ); then
				echo "The server is already running, try restart or stop"
				exit 1
			else
				echo "ts3server.pid found, but no server running. Possibly your previously started server crashed"
				echo "Please view the logfile for details."
				rm "${PIDFILE}"
			fi
		fi
		if [ "${UID}" = "0" ]; then
			echo WARNING ! For security reasons we advise: DO NOT RUN THE SERVER AS ROOT
			c=1
			while [ "$c" -le 10 ]; do
				echo -n "!"
				sleep 1
				c=$((++c))
			done
			echo "!"
		fi
		echo "Starting the TeamSpeak 3 server"
		if [ -e "$BINARYNAME" ]; then
			if [ ! -x "$BINARYNAME" ]; then
				echo "${BINARYNAME} is not executable, trying to set it"
				chmod u+x "${BINARYNAME}"
			fi
			if [ -x "$BINARYNAME" ]; then
				export LD_LIBRARY_PATH="${LIBRARYPATH}:${LD_LIBRARY_PATH}"					
				"./${BINARYNAME}" ${COMMANDLINE_PARAMETERS} > /dev/null & 
				echo $! > "${PIDFILE}"
				echo "TeamSpeak 3 server started, for details please view the log file"
			else
				echo "${BINARNAME} is not exectuable, cannot start TeamSpeak 3 server"
			fi
		else
			echo "Could not find binary, aborting"
			exit 5
		fi
	;;
	stop)
		if [ -e "${PIDFILE}" ]; then
			echo -n "Stopping the TeamSpeak 3 server"
			if ( kill -TERM $(cat "${PIDFILE}") 2> /dev/null ); then
				c=1
				while [ "$c" -le 300 ]; do
					if ( kill -0 $(cat "${PIDFILE}") 2> /dev/null ); then
						echo -n "."
						sleep 1
					else
						break
					fi
					c=$((++c)) 
				done
			fi
			if ( kill -0 $(cat "${PIDFILE}") 2> /dev/null ); then
				echo "Server is not shutting down cleanly - killing"
				kill -KILL $(cat "${PIDFILE}")
			else
				echo "done"
			fi
			rm "${PIDFILE}"
		else
			echo "No server running (ts3server.pid is missing)"
			exit 7
		fi
	;;
	force-reload)
		$0 stop && $0 start || exit 1
	;;
	restart)
		$0 stop && $0 start || exit 1
	;;
	status)
		if [ -e "${PIDFILE}" ]; then
			if ( kill -0 $(cat "${PIDFILE}") 2> /dev/null ); then
				echo "Server is running"
			else
				echo "Server seems to have died"
			fi
		else
			echo "No server running (ts3server.pid is missing)"
		fi
	;;
	*)
		echo "Usage: ${0} {start|stop|restart|force-reload|status}"
		exit 2
esac
exit 0

